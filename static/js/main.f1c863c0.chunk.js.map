{"version":3,"sources":["components/Searchbar/searchbar.js","components/Footer/bottomNav.js","containers/MovieDetails.js","components/GridList/Grid.js","containers/FavoriteContainer.js","components/Layout/Home.js","containers/UnfavoriteContainer.js","components/SideNav/sidenav.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","useStyles","BottomNav","classes","React","useState","value","setValue","Fragment","CssBaseline","Container","fixed","BottomNavigation","onChange","event","newValue","className","BottomNavigationAction","label","icon","card","maxWidth","withRouter","props","searchData","setSearchData","showSpin","setShowSpin","useEffect","match","path","handleServiceCall","params","axios","get","id","then","res","persons","data","poster_path","console","log","CircularProgress","disableShrink","Card","CardActionArea","CardMedia","component","alt","original_title","src","img","CardContent","Typography","gutterBottom","variant","overview","style","float","genres","name","runtime","release_date","vote_count","CardActions","Button","size","checkUnFavColor","isUnfavorite","GridList","cellHeight","cols","map","tile","i","GridListTile","key","GridListTileBar","subtitle","vote_average","to","actionIcon","IconButton","isFavorite","aria-label","onClick","storedData","JSON","parse","window","localStorage","getItem","s","find","sd","filter","push","removeItem","setItem","stringify","addToFavorite","addToUnFavorite","localStorageState","l","length","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","cursor","useTheme","open","setOpen","text","setText","currentPath","location","AppBar","clsx","Toolbar","edge","noWrap","results","p","InputBase","placeholder","target","input","inputProps","Drawer","anchor","paper","direction","Divider","List","index","ListItem","button","ListItemIcon","route","ListItemText","primary","pathname","FavoriteContainer","UnfavoriteContainer","exact","MovieDetails","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f1c863c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(30),\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 120,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n           <img src=\"yoyo.PNG\"/>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Facebook from '@material-ui/icons/Facebook';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n  },\r\n});\r\n\r\nexport default function BottomNav() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('recents');\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline />\r\n    <Container fixed>\r\n    <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n      <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n      <BottomNavigationAction label=\"Folder\" value=\"facebook\" icon={<Facebook />} />\r\n    </BottomNavigation>\r\n    </Container>\r\n    </React.Fragment>\r\n  );\r\n}","import React , {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {withRouter} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nconst  IMG_PATH ='https://image.tmdb.org/t/p/original';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 500,\r\n  },\r\n});\r\nconst MovieDetails = (props) => {\r\n    let [searchData, setSearchData] = React.useState([]);\r\n    let [showSpin, setShowSpin]=React.useState(true);\r\n    useEffect(() => {\r\n      if (props.match.path === '/:id')\r\n        handleServiceCall(props.match.params);\r\n      }, []);\r\n\r\n    const  handleServiceCall =  () => {\r\n      setShowSpin(true);\r\n        axios.get(`https://api.themoviedb.org/3/movie/`+props.match.params.id+`?api_key=4cb1eeab94f45affe2536f2c684a5c9e`)\r\n        .then(res => {\r\n          setShowSpin(false);\r\n          const persons = res.data;\r\n          if (persons) {\r\n            persons['img']=IMG_PATH+persons.poster_path;\r\n          }\r\n          setSearchData(persons);\r\n         \r\n        })\r\n };\r\n\r\nconsole.log(\"Propd:\"+props);\r\n\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    \r\n      return ( <div> { showSpin ?\r\n        <CircularProgress disableShrink />\r\n        :\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt={searchData.original_title}\r\n            height=\"200\"\r\n            width=\"100\"\r\n            src={searchData.img}\r\n              title={searchData.original_title}\r\n            />\r\n            \r\n        <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {searchData.original_title}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n               {searchData.overview}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            <span style={{float: 'left'}}> Genre :  {searchData.genres ? searchData.genres[0].name: ''} </span> <br/>\r\n     <span style={{float: 'left'}}>  Running Time :{searchData.runtime} min </span>  <br/>\r\n     <span style={{float: 'left'}}> Release Date :   {searchData.release_date} </span> <br/>\r\n     <span style={{float: 'left'}}> \r\n     <Favorite style={{color: 'red',float: 'left'}}/> : {searchData.vote_count}\r\n     </span>\r\n    \r\n\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button size=\"small\" color=\"primary\">\r\n              Share\r\n            </Button>\r\n            <Button size=\"small\" color=\"primary\">\r\n              Learn More\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n        }\r\n        </div>\r\n      );\r\n   \r\n   \r\n}\r\n export default withRouter(MovieDetails);","import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport ThumbDown from '@material-ui/icons/ThumbDown';\r\nimport MovieDetails from '../../containers/MovieDetails';\r\nimport './Grid.css';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\n\r\nconst Grid = (props) => {\r\n  const [searchData, setSearchData] = React.useState(props.searchData ? props.searchData : []);\r\n  const [favoriteList, setFavoriteList] = React.useState([]);\r\n\r\n  let favorites = [];\r\n  let sData = [];\r\n\r\n  const addToFavorite = (data) => {\r\n    let storedData = JSON.parse(window.localStorage.getItem('search-data'));\r\n    let s = searchData.find(sd => sd.id === data.id);\r\n    if (s) {\r\n      s['isFavorite'] = !s.isFavorite;\r\n      data.isFavorite = s.isFavorite;\r\n      s.isUnfavorite = false;\r\n      if (storedData) {\r\n        storedData = storedData.filter(sd => sd.id !== s.id);\r\n        storedData.push(s);\r\n      } else {\r\n        storedData = [];\r\n        storedData.push(s);\r\n      }\r\n    } else if (storedData) {\r\n      data.isFavorite = true;\r\n      storedData = storedData.filter(sd => sd.id !== data.id);\r\n      storedData.push(data);\r\n    }\r\n    setSearchData([...searchData]);\r\n    window.localStorage.removeItem('search-data');\r\n    if (storedData)\r\n      window.localStorage.setItem('search-data', JSON.stringify(storedData));\r\n  };\r\n\r\n  const addToUnFavorite = (data) => {\r\n  let storedData = JSON.parse(window.localStorage.getItem('search-data'));\r\n    let s = searchData.find(sd => sd.id === data.id);\r\n    if (s) {\r\n      s['isUnfavorite'] = !s.isUnfavorite;\r\n      data.isFavorite = false;\r\n      s.isFavorite = false;\r\n      if (storedData) {\r\n        storedData = storedData.filter(sd => sd.id !== s.id);\r\n        storedData.push(s);\r\n      } else {\r\n        storedData = [];\r\n        storedData.push(s);\r\n      }\r\n    } else if (storedData) {\r\n      data.isUnfavorite = true;\r\n      storedData = storedData.filter(sd => sd.id !== data.id);\r\n      storedData.push(data);\r\n    }\r\n    setSearchData([...searchData]);\r\n    window.localStorage.removeItem('search-data');\r\n    if (storedData)\r\n      window.localStorage.setItem('search-data', JSON.stringify(storedData));\r\n  }\r\n\r\n  const checkColor = (data) => {\r\n\r\n    return data.isFavorite ? 'gold' : 'white';\r\n  }\r\n  const checkUnFavColor = (data) => {\r\n\r\n    return data.isUnfavorite ? 'red' : 'white';\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <GridList cellHeight={200} cols={4}>\r\n\r\n      {props.searchData.map((tile, i) => (\r\n        <GridListTile key={tile.img + i}>\r\n          <img src={tile.img} alt={tile.title} />\r\n          <GridListTileBar\r\n            title={tile.title}\r\n            subtitle={<span>Release: {tile.release_date}<br />\r\n\r\n              <span>Avg: {tile.vote_average}/10</span>\r\n              <br />\r\n              <Link style={{color:'white'}} to={'/' + tile.id}>More.. </Link></span>\r\n            }\r\n            actionIcon={\r\n              <div>\r\n                <IconButton style={{ color: checkColor(tile) }} aria-label={`info about ${tile.title}`}\r\n                  onClick={() => addToFavorite(tile)}>\r\n                  <ThumbUp />\r\n                </IconButton>\r\n                <IconButton style={{ color: checkUnFavColor(tile) }}\r\n                  onClick={() => addToUnFavorite(tile)} aria-label={`info about ${tile.title}`} >\r\n                  <ThumbDown />\r\n                </IconButton>\r\n              </div>\r\n            }\r\n          />\r\n        </GridListTile>\r\n      ))}\r\n    </GridList>\r\n  )\r\n\r\n}\r\nexport default withRouter(Grid);","\r\nimport React from 'react';\r\nimport  Grid from '../components/GridList/Grid';\r\nimport {withRouter} from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst FavoriteContainer = () => {\r\n    let localStorageState = JSON.parse(window.localStorage.getItem('search-data'));\r\n    if (localStorageState)\r\n    localStorageState = localStorageState.filter(l => l.isFavorite);\r\nelse localStorageState = [];\r\n\r\n    return (\r\n        <div>\r\n            { !localStorageState ?\r\n        <CircularProgress disableShrink />\r\n        :\r\n            localStorageState && localStorageState.length > 0 ? \r\n  <Grid searchData={localStorageState}> </Grid>\r\n  : <h4>No Favorites Added </h4>\r\n            }\r\n        \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(FavoriteContainer);","\r\nimport React from 'react';\r\nimport  Grid from '../../components/GridList/Grid';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    let localStorageState = JSON.parse(window.localStorage.getItem('search'));\r\n    if (localStorageState)\r\n    localStorageState.map(l => {\r\n        l.isFavorite = false;\r\n        l.isUnfavorite = false;\r\n    })\r\n    return (\r\n        <div>\r\n         {   localStorageState && localStorageState.length > 0 ? \r\n  <Grid searchData={localStorageState}> </Grid>\r\n  : <h4>Welcome to Yoyo Cinema </h4>\r\n         }\r\n        \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","\r\nimport React from 'react';\r\nimport  Grid from '../components/GridList/Grid';\r\nimport {withRouter} from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst UnfavoriteContainer = () => {\r\n    let localStorageState = JSON.parse(window.localStorage.getItem('search-data'));\r\n    if (localStorageState)\r\n    localStorageState = localStorageState.filter(l => l.isUnfavorite);\r\n    else localStorageState = [];\r\n\r\n\r\n    return (\r\n        <div>\r\n            { !localStorageState ?\r\n        <CircularProgress disableShrink />\r\n        :\r\n            localStorageState && localStorageState.length > 0 ? \r\n  <Grid searchData={localStorageState}> </Grid>\r\n  : <h4>No UnFavorites Added </h4>\r\n            }\r\n        \r\n  </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UnfavoriteContainer);","import React, {useEffect} from 'react';\r\nimport clsx from 'clsx';\r\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport Movie from '@material-ui/icons/Movie';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport Grid from '../../components/GridList/Grid';\r\nimport axios from 'axios';\r\nimport {Route, Switch, Link, withRouter} from 'react-router-dom';\r\nimport MovieDetails from '../../containers/MovieDetails';\r\nimport  Home  from \"../../components/Layout/Home\";\r\nimport FavoriteContainer from \"../../containers/FavoriteContainer\";\r\nimport UnfavoriteContainer from \"../../containers/UnfavoriteContainer\";\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst  IMG_PATH ='https://image.tmdb.org/t/p/original';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(30),\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'relative',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  // inputInput: {\r\n  //   padding: theme.spacing(1, 1, 1, 7),\r\n  //   transition: theme.transitions.create('width'),\r\n  //   width: '100%',\r\n  //   [theme.breakpoints.up('sm')]: {\r\n  //     width: 120,\r\n  //     '&:focus': {\r\n  //       width: 200,\r\n  //     },\r\n  //   },\r\n  // },\r\n}));\r\n\r\nconst SideNav = (props) => {\r\n  const formItemPropTypes = {\r\n    searchData: [],\r\n    handleItemSelection: false\r\n  };\r\n  const classes = useStyles();\r\n  let searchKey='';\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [text, setText] = React.useState('');\r\n  let [searchData, setSearchData] = React.useState([]);\r\nconst currentPath = props.location;\r\nconsole.log(currentPath+':::');\r\n  const state = {\r\n    persons: []\r\n  }\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const changeInput = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n const searchMovie = () => {\r\n    axios.get(`https://api.themoviedb.org/3/search/movie?api_key=4cb1eeab94f45affe2536f2c684a5c9e&query=`+text)\r\n    .then(res => {\r\n      const persons = res.data.results;\r\n      if ( persons.length > 0 ) {\r\n      persons.map(p => {p['img']=IMG_PATH+p.poster_path;\r\n      p['isFavorite'] = false;\r\n      p['isUnfavorite']= false;\r\n    } );\r\n    }\r\n      setSearchData(persons);\r\n      window.localStorage.removeItem('search');\r\n      window.localStorage.setItem('search', JSON.stringify(searchData));\r\n    })\r\n   \r\n  }\r\n\r\n  const navigateRoute = (route) => {\r\n if (route === 'Movies')\r\n return '';\r\n  if(route ==='Favorites')\r\n  return '/favorites'\r\n  if(route === 'Unfavorite')\r\n  return '/unfavorites'\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          <img src=\"yoyo.PNG\"/>\r\n         </Typography>\r\n         \r\n         <div className={classes.search}>\r\n        \r\n         <IconButton\r\n            color=\"inherit\"\r\n            onClick={() => searchMovie()}\r\n            edge=\"start\"\r\n           \r\n          >\r\n            <SearchIcon />\r\n          </IconButton> \r\n          {/* <div className={classes.searchIcon} onClick={() => searchMovie()}>\r\n              <SearchIcon />\r\n            </div> */}\r\n      \r\n           <InputBase\r\n             placeholder=\"Search…\"\r\n             onChange={changeInput}\r\n             classes={{\r\n               root: classes.inputRoot,\r\n               input: classes.inputInput,\r\n             }}\r\n             inputProps={{ 'aria-label': 'search' }}\r\n           />\r\n          \r\n         </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Movies', 'Favorites', 'Unfavorite'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index === 0 ? <Movie /> : index === 1 ? <Favorite />\r\n              : <FavoriteBorder/>}</ListItemIcon>\r\n              <Link to={()=>navigateRoute(text)}>\r\n              <ListItemText primary={text} />\r\n              </Link>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['TV Shows', 'Documentaries', 'Yoyo Originals'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon><Movie /></ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {\r\n            searchData.length === 0 ?\r\n            <Typography variant=\"h5\">\r\n            Welcome to yoyo Cinema. Please Search Movie  \r\n         </Typography>\r\n\r\n            : \r\n      \r\n        \r\n          currentPath.pathname === '/' || currentPath === '/home' ?\r\n          <Grid searchData={searchData}/> : ''\r\n        }\r\n         \r\n           <Switch>\r\n      <Route path=\"/favorites\"  component={FavoriteContainer} />\r\n      <Route path=\"/unfavorites\" component={UnfavoriteContainer}/>\r\n      {/* <Route path=\"\"  component={Home}/> */}\r\n      <Route path=\"/:id\" exact component={MovieDetails}/>\r\n      </Switch>\r\n     \r\n \r\n      </main>\r\n     \r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(SideNav);","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SearchAppBar from './components/Searchbar/searchbar';\r\nimport BottomNav from './components/Footer/bottomNav';\r\nimport SideNav from './components/SideNav/sidenav';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  window.localStorage.removeItem('search-data');\r\n  window.localStorage.removeItem('search');\r\n  return (\r\n    <BrowserRouter>\r\n    <div className=\"App\">\r\n    { /* <SearchAppBar/> */ }\r\n      <SideNav/>\r\n      <BottomNav className=\"footer\"/>\r\n    </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}